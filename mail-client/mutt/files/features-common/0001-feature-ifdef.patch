# HG changeset patch
# User Cedric Duval <cedricduval@free.fr>
# Date 1453849209 0
#      Tue Jan 26 23:00:09 2016 +0000
# Node ID 8c85bbb5d7ccf61460659e4a30a99f0a19b87dcc
# Parent  2731ee526834ab3e907f9328c5d9ebca55e6ab95
[PATCH] feature: ifdef
Conditional config options

Modified for Gentoo to reduce differences

diff -r 2731ee526834 -r 8c85bbb5d7cc Makefile.am
--- a/Makefile.am	Sat Mar 31 14:13:34 2018 +0200
+++ b/Makefile.am	Tue Jan 26 23:00:09 2016 +0000
@@ -38,7 +38,7 @@ mutt_SOURCES = \
 	score.c send.c sendlib.c signal.c sort.c \
 	status.c system.c thread.c charset.c history.c lib.c \
 	muttlib.c editmsg.c mbyte.c \
-	url.c ascii.c crypt-mod.c crypt-mod.h safe_asprintf.c
+	url.c ascii.c crypt-mod.c crypt-mod.h safe_asprintf.c version.c
 
 nodist_mutt_SOURCES = $(BUILT_SOURCES)
 
@@ -77,7 +77,7 @@ EXTRA_DIST = COPYRIGHT GPL OPS OPS.PGP O
 	muttbug pgppacket.h depcomp ascii.h BEWARE PATCHES patchlist.sh \
 	ChangeLog mkchangelog.sh mutt_idna.h sidebar.h OPS.SIDEBAR \
 	snprintf.c regex.c crypt-gpgme.h hcachever.sh.in \
-	txt2c.c txt2c.sh version.sh check_sec.sh
+	txt2c.c txt2c.sh version.sh check_sec.sh version.h
 
 EXTRA_SCRIPTS = smime_keys
 
diff -r 2731ee526834 -r 8c85bbb5d7cc PATCHES
--- a/PATCHES	Sat Mar 31 14:13:34 2018 +0200
+++ b/PATCHES	Tue Jan 26 23:00:09 2016 +0000
@@ -1,3 +1,4 @@
+patch-ifdef-neomutt
 patch-allow-slow-IO-interrupt-neomutt
 patch-browser-sort-additions-neomutt
 patch-bind-enter-return-separately-gentoo
diff -r 2731ee526834 -r 8c85bbb5d7cc hook.c
--- a/hook.c	Sat Mar 31 14:13:34 2018 +0200
+++ b/hook.c	Tue Jan 26 23:00:09 2016 +0000
@@ -377,7 +377,7 @@ void mutt_message_hook (CONTEXT *ctx, HE
     if (hook->type & type)
       if ((mutt_pattern_exec (hook->pattern, 0, ctx, hdr, &cache) > 0) ^ hook->rx.not)
       {
-	if (mutt_parse_rc_line (hook->command, &token, &err) != 0)
+	if (mutt_parse_rc_line (hook->command, &token, &err) == -1)
 	{
 	  FREE (&token.data);
 	  mutt_error ("%s", err.data);
diff -r 2731ee526834 -r 8c85bbb5d7cc init.c
--- a/init.c	Sat Mar 31 14:13:34 2018 +0200
+++ b/init.c	Tue Jan 26 23:00:09 2016 +0000
@@ -32,6 +32,7 @@
 #include "mutt_crypt.h"
 #include "mutt_idna.h"
 #include "group.h"
+#include "version.h"
 
 #if defined(USE_SSL)
 #include "mutt_ssl.h"
@@ -656,6 +657,113 @@ static mbchar_table *parse_mbchar_table 
   return t;
 }
 
+/**
+ * finish_source - 'finish' command: stop processing current config file
+ * @tmp:  Temporary space shared by all command handlers
+ * @s:    Current line of the config file
+ * @data: data field from init.h:struct command_t
+ * @err:  Buffer for any error message
+ *
+ * If the 'finish' command is found, we should stop reading the current file.
+ *
+ * Returns:
+ *	 1 Stop processing the current file
+ *	-1 Failed
+ */
+static int finish_source (BUFFER *tmp, BUFFER *s, unsigned long data, BUFFER *err)
+{
+	if (MoreArgs (s)) {
+		snprintf (err->data, err->dsize, _("finish: too many arguments"));
+		return -1;
+	}
+
+	return 1;
+}
+
+/**
+ * parse_ifdef - 'ifdef' command: conditional config
+ * @tmp:  Temporary space shared by all command handlers
+ * @s:    Current line of the config file
+ * @data: data field from init.h:struct command_t
+ * @err:  Buffer for any error message
+ *
+ * The 'ifdef' command allows conditional elements in the config file.
+ * If a given variable, function, command or compile-time symbol exists, then
+ * read the rest of the line of config commands.
+ * e.g.
+ *	ifdef USE_SIDEBAR source ~/.mutt/sidebar.rc
+ *
+ * If (data == 1) then it means use the 'ifndef' (if-not-defined) command.
+ * e.g.
+ *	ifndef USE_IMAP finish
+ *
+ * Returns:
+ *	 0 Success
+ *	-1 Failed
+ */
+static int parse_ifdef (BUFFER *tmp, BUFFER *s, unsigned long data, BUFFER *err)
+{
+	int i, j, res = 0;
+	BUFFER token;
+
+	memset (&token, 0, sizeof (token));
+	mutt_extract_token (tmp, s, 0);
+
+	/* is the item defined as a variable? */
+	res = (mutt_option_index (tmp->data) != -1);
+
+	/* is the item a compiled-in feature? */
+	if (!res) {
+		res = feature_enabled (tmp->data);
+	}
+
+	/* or a function? */
+	if (!res) {
+		for (i = 0; !res && (i < MENU_MAX); i++) {
+			const struct binding_t *b = km_get_table (Menus[i].value);
+			if (!b)
+				continue;
+
+			for (j = 0; b[j].name; j++) {
+				if (mutt_strcmp (tmp->data, b[j].name) == 0) {
+					res = 1;
+					break;
+				}
+			}
+		}
+	}
+
+	/* or a command? */
+	if (!res) {
+		for (i = 0; Commands[i].name; i++) {
+			if (mutt_strcmp (tmp->data, Commands[i].name) == 0) {
+				res = 1;
+				break;
+			}
+		}
+	}
+
+	if (!MoreArgs (s)) {
+		snprintf (err->data, err->dsize, _("%s: too few arguments"),
+			(data ? "ifndef" : "ifdef"));
+		return -1;
+	}
+	mutt_extract_token (tmp, s, MUTT_TOKEN_SPACE);
+
+        /* ifdef KNOWN_SYMBOL or ifndef UNKNOWN_SYMBOL */
+	if ((res && (data == 0)) || (!res && (data == 1))) {
+                int rc = mutt_parse_rc_line (tmp->data, &token, err);
+		if (rc == -1) {
+			mutt_error ("Error: %s", err->data);
+			FREE(&token.data);
+			return -1;
+		}
+		FREE(&token.data);
+                return rc;
+	}
+	return 0;
+}
+
 static int parse_unignore (BUFFER *buf, BUFFER *s, unsigned long data, BUFFER *err)
 {
   do
@@ -2618,7 +2726,7 @@ static int parse_set (BUFFER *tmp, BUFFE
 static int source_rc (const char *rcfile, BUFFER *err)
 {
   FILE *f;
-  int line = 0, rc = 0, conv = 0;
+  int line = 0, rc = 0, conv = 0, line_rc;
   BUFFER token;
   char *linebuf = NULL;
   char *currentline = NULL;
@@ -2647,17 +2755,17 @@ static int source_rc (const char *rcfile
     else 
       currentline=linebuf;
 
-    if (mutt_parse_rc_line (currentline, &token, err) == -1)
-    {
+    line_rc = mutt_parse_rc_line (currentline, &token, err);
+    if (line_rc == -1) {
       mutt_error (_("Error in %s, line %d: %s"), rcfile, line, err->data);
       if (--rc < -MAXERRS) 
       {
         if (conv) FREE(&currentline);
         break;
       }
-    }
-    else
-    {
+    } else if (line_rc == 1) {
+      break;	/* Found "finish" command */
+    } else {
       if (rc < 0)
         rc = -1;
     }
@@ -2712,7 +2820,7 @@ static int parse_source (BUFFER *tmp, BU
    err		where to write error messages */
 int mutt_parse_rc_line (/* const */ char *line, BUFFER *token, BUFFER *err)
 {
-  int i, r = -1;
+  int i, r = 0;
   BUFFER expn;
 
   if (!line || !*line)
@@ -2739,18 +2847,20 @@ int mutt_parse_rc_line (/* const */ char
     {
       if (!mutt_strcmp (token->data, Commands[i].name))
       {
-	if (Commands[i].func (token, &expn, Commands[i].data, err) != 0)
-	  goto finish;
-        break;
+        r = Commands[i].func (token, &expn, Commands[i].data, err);
+        if (r != 0) {   /* -1 Error, +1 Finish */
+          goto finish;  /* Propagate return code */
+        }
+        break;          /* Continue with next command */
       }
     }
     if (!Commands[i].name)
     {
       snprintf (err->data, err->dsize, _("%s: unknown command"), NONULL (token->data));
-      goto finish;
+      r = -1;
+      break;            /* Ignore the rest of the line */
     }
   }
-  r = 0;
 finish:
   if (expn.destroy)
     FREE (&expn.data);
@@ -3237,7 +3347,7 @@ static int mutt_execute_commands (LIST *
   mutt_buffer_init (&token);
   for (; p; p = p->next)
   {
-    if (mutt_parse_rc_line (p->data, &token, &err) != 0)
+    if (mutt_parse_rc_line (p->data, &token, &err) == -1)
     {
       fprintf (stderr, _("Error in command line: %s\n"), err.data);
       FREE (&token.data);
diff -r 2731ee526834 -r 8c85bbb5d7cc init.h
--- a/init.h	Sat Mar 31 14:13:34 2018 +0200
+++ b/init.h	Tue Jan 26 23:00:09 2016 +0000
@@ -4030,6 +4030,8 @@ static int parse_lists (BUFFER *, BUFFER
 static int parse_unlists (BUFFER *, BUFFER *, unsigned long, BUFFER *);
 static int parse_alias (BUFFER *, BUFFER *, unsigned long, BUFFER *);
 static int parse_unalias (BUFFER *, BUFFER *, unsigned long, BUFFER *);
+static int finish_source (BUFFER *, BUFFER *, unsigned long, BUFFER *);
+static int parse_ifdef (BUFFER *, BUFFER *, unsigned long, BUFFER *);
 static int parse_ignore (BUFFER *, BUFFER *, unsigned long, BUFFER *);
 static int parse_unignore (BUFFER *, BUFFER *, unsigned long, BUFFER *);
 static int parse_source (BUFFER *, BUFFER *, unsigned long, BUFFER *);
@@ -4090,6 +4092,9 @@ const struct command_t Commands[] = {
   { "group",		parse_group,		MUTT_GROUP },
   { "ungroup",		parse_group,		MUTT_UNGROUP },
   { "hdr_order",	parse_list,		UL &HeaderOrderList },
+  { "ifdef",		parse_ifdef,		0 },
+  { "ifndef",		parse_ifdef,		1 },
+  { "finish",		finish_source,		0 },
 #ifdef HAVE_ICONV
   { "iconv-hook",	mutt_parse_hook,	MUTT_ICONVHOOK },
 #endif
diff -r 2731ee526834 -r 8c85bbb5d7cc main.c
--- a/main.c	Sat Mar 31 14:13:34 2018 +0200
+++ b/main.c	Tue Jan 26 23:00:09 2016 +0000
@@ -31,6 +31,7 @@
 #include "url.h"
 #include "mutt_crypt.h"
 #include "mutt_idna.h"
+#include "version.h"
 #ifdef USE_SIDEBAR
 #include "sidebar.h"
 #endif
@@ -231,6 +232,7 @@ static void show_version (void)
   printf ("\nCompilation CFLAGS: %s\n", (char *)cc_cflags);
 
   puts (_("\nCompile options:"));
+  print_compile_options();
 
 #ifdef DOMAIN
   printf ("DOMAIN=\"%s\"\n", DOMAIN);
@@ -238,278 +240,6 @@ static void show_version (void)
   puts ("-DOMAIN");
 #endif
 
-#ifdef DEBUG
-  puts ("+DEBUG");
-#else
-  puts ("-DEBUG");
-#endif
-  
-
-  
-  puts (
-
-#ifdef HOMESPOOL
-	"+HOMESPOOL  "
-#else
-	"-HOMESPOOL  "
-#endif
-
-#ifdef USE_SETGID
-	"+USE_SETGID  "
-#else
-	"-USE_SETGID  "
-#endif
-
-#ifdef USE_DOTLOCK
-	"+USE_DOTLOCK  "
-#else
-	"-USE_DOTLOCK  "
-#endif
-
-#ifdef DL_STANDALONE
-	"+DL_STANDALONE  "
-#else
-	"-DL_STANDALONE  "
-#endif
-
-#ifdef USE_FCNTL
-	"+USE_FCNTL  "
-#else
-	"-USE_FCNTL  "
-#endif
-
-#ifdef USE_FLOCK
-	"+USE_FLOCK   "
-#else
-	"-USE_FLOCK   "
-#endif
-    );
-  puts (
-#ifdef USE_POP
-	"+USE_POP  "
-#else
-	"-USE_POP  "
-#endif
-
-#ifdef USE_IMAP
-        "+USE_IMAP  "
-#else
-        "-USE_IMAP  "
-#endif
-
-#ifdef USE_SMTP
-	"+USE_SMTP  "
-#else
-	"-USE_SMTP  "
-#endif
-	"\n"
-	
-#ifdef USE_SSL_OPENSSL
-	"+USE_SSL_OPENSSL  "
-#else
-	"-USE_SSL_OPENSSL  "
-#endif
-
-#ifdef USE_SSL_GNUTLS
-	"+USE_SSL_GNUTLS  "
-#else
-	"-USE_SSL_GNUTLS  "
-#endif
-
-#ifdef USE_SASL
-	"+USE_SASL  "
-#else
-	"-USE_SASL  "
-#endif
-#ifdef USE_GSS
-	"+USE_GSS  "
-#else
-	"-USE_GSS  "
-#endif
-
-#if HAVE_GETADDRINFO
-	"+HAVE_GETADDRINFO  "
-#else
-	"-HAVE_GETADDRINFO  "
-#endif
-        );
-  	
-  puts (
-#ifdef HAVE_REGCOMP
-	"+HAVE_REGCOMP  "
-#else
-	"-HAVE_REGCOMP  "
-#endif
-
-#ifdef USE_GNU_REGEX
-	"+USE_GNU_REGEX  "
-#else
-	"-USE_GNU_REGEX  "
-#endif
-
-	"\n"
-	
-#ifdef HAVE_COLOR
-	"+HAVE_COLOR  "
-#else
-	"-HAVE_COLOR  "
-#endif
-	
-#ifdef HAVE_START_COLOR
-	"+HAVE_START_COLOR  "
-#else
-	"-HAVE_START_COLOR  "
-#endif
-	
-#ifdef HAVE_TYPEAHEAD
-	"+HAVE_TYPEAHEAD  "
-#else
-	"-HAVE_TYPEAHEAD  "
-#endif
-	
-#ifdef HAVE_BKGDSET
-	"+HAVE_BKGDSET  "
-#else
-	"-HAVE_BKGDSET  "
-#endif
-
-	"\n"
-	
-#ifdef HAVE_CURS_SET
-	"+HAVE_CURS_SET  "
-#else
-	"-HAVE_CURS_SET  "
-#endif
-	
-#ifdef HAVE_META
-	"+HAVE_META  "
-#else
-	"-HAVE_META  "
-#endif
-	
-#ifdef HAVE_RESIZETERM
-	"+HAVE_RESIZETERM  "
-#else
-	"-HAVE_RESIZETERM  "
-#endif
-	
-#ifdef HAVE_FUTIMENS
-	"+HAVE_FUTIMENS  "
-#else
-	"-HAVE_FUTIMENS  "
-#endif
-        );	
-  
-  puts (
-#ifdef CRYPT_BACKEND_CLASSIC_PGP
-        "+CRYPT_BACKEND_CLASSIC_PGP  "
-#else
-        "-CRYPT_BACKEND_CLASSIC_PGP  "
-#endif
-#ifdef CRYPT_BACKEND_CLASSIC_SMIME
-        "+CRYPT_BACKEND_CLASSIC_SMIME  "
-#else
-        "-CRYPT_BACKEND_CLASSIC_SMIME  "
-#endif
-#ifdef CRYPT_BACKEND_GPGME
-        "+CRYPT_BACKEND_GPGME  "
-#else
-        "-CRYPT_BACKEND_GPGME  "
-#endif
-        );
-  
-  puts (
-#ifdef EXACT_ADDRESS
-	"+EXACT_ADDRESS  "
-#else
-	"-EXACT_ADDRESS  "
-#endif
-
-#ifdef SUN_ATTACHMENT
-	"+SUN_ATTACHMENT  "
-#else
-	"-SUN_ATTACHMENT  "
-#endif
-
-	"\n"
-	
-#ifdef ENABLE_NLS
-	"+ENABLE_NLS  "
-#else
-	"-ENABLE_NLS  "
-#endif
-
-#ifdef LOCALES_HACK
-	"+LOCALES_HACK  "
-#else
-	"-LOCALES_HACK  "
-#endif
-	      
-#ifdef HAVE_WC_FUNCS
-	"+HAVE_WC_FUNCS  "
-#else
-	"-HAVE_WC_FUNCS  "
-#endif
-	
-#ifdef HAVE_LANGINFO_CODESET
-	"+HAVE_LANGINFO_CODESET  "
-#else
-	"-HAVE_LANGINFO_CODESET  "
-#endif
-
-	
-#ifdef HAVE_LANGINFO_YESEXPR
- 	"+HAVE_LANGINFO_YESEXPR  "
-#else
- 	"-HAVE_LANGINFO_YESEXPR  "
-#endif
-	
-	"\n"
-
-#if HAVE_ICONV
-	"+HAVE_ICONV  "
-#else
-	"-HAVE_ICONV  "
-#endif
-
-#if ICONV_NONTRANS
-	"+ICONV_NONTRANS  "
-#else
-	"-ICONV_NONTRANS  "
-#endif
-
-#if HAVE_LIBIDN
-	"+HAVE_LIBIDN  "
-#else
-	"-HAVE_LIBIDN  "
-#endif
-	
-#if HAVE_GETSID
-	"+HAVE_GETSID  "
-#else
-	"-HAVE_GETSID  "
-#endif
-
-#if USE_HCACHE
-	"+USE_HCACHE  "
-#else
-	"-USE_HCACHE  "
-#endif
-
-#ifdef USE_SIDEBAR
-	"+USE_SIDEBAR  "
-#else
-	"-USE_SIDEBAR  "
-#endif
-
-#ifdef USE_COMPRESSED
-	"+USE_COMPRESSED  "
-#else
-	"-USE_COMPRESSED  "
-#endif
-
-	);
-
 #ifdef ISPELL
   printf ("ISPELL=\"%s\"\n", ISPELL);
 #else
diff -r 2731ee526834 -r 8c85bbb5d7cc version.c
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/version.c	Tue Jan 26 23:00:09 2016 +0000
@@ -0,0 +1,296 @@
+/**
+ * Copyright (C) 1996-2007 Michael R. Elkins <me@mutt.org>
+ * Copyright (C) 1999-2007 Thomas Roessler <roessler@does-not-exist.org>
+ * Copyright (C) 2016 Richard Russon
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
+ */
+
+#if HAVE_CONFIG_H
+#include "config.h"
+#endif
+#include "lib.h"
+
+#include <stdio.h>
+#include <string.h>
+
+const int SCREEN_WIDTH = 78;
+
+struct compile_options {
+	const char *name;
+	int enabled;
+};
+
+static struct compile_options comp_opts[] = {
+#ifdef CRYPT_BACKEND_CLASSIC_PGP
+	{ "CRYPT_BACKEND_CLASSIC_PGP", 1 },
+#else
+	{ "CRYPT_BACKEND_CLASSIC_PGP", 0 },
+#endif
+#ifdef CRYPT_BACKEND_CLASSIC_SMIME
+	{ "CRYPT_BACKEND_CLASSIC_SMIME", 1 },
+#else
+	{ "CRYPT_BACKEND_CLASSIC_SMIME", 0 },
+#endif
+#ifdef CRYPT_BACKEND_GPGME
+	{ "CRYPT_BACKEND_GPGME", 1 },
+#else
+	{ "CRYPT_BACKEND_GPGME", 0 },
+#endif
+#ifdef DEBUG
+	{ "DEBUG", 1 },
+#else
+	{ "DEBUG", 0 },
+#endif
+#ifdef DL_STANDALONE
+	{ "DL_STANDALONE", 1 },
+#else
+	{ "DL_STANDALONE", 0 },
+#endif
+#ifdef ENABLE_NLS
+	{ "ENABLE_NLS", 1 },
+#else
+	{ "ENABLE_NLS", 0 },
+#endif
+#ifdef EXACT_ADDRESS
+	{ "EXACT_ADDRESS", 1 },
+#else
+	{ "EXACT_ADDRESS", 0 },
+#endif
+#ifdef HOMESPOOL
+	{ "HOMESPOOL", 1 },
+#else
+	{ "HOMESPOOL", 0 },
+#endif
+#ifdef LOCALES_HACK
+	{ "LOCALES_HACK", 1 },
+#else
+	{ "LOCALES_HACK", 0 },
+#endif
+#ifdef SUN_ATTACHMENT
+	{ "SUN_ATTACHMENT", 1 },
+#else
+	{ "SUN_ATTACHMENT", 0 },
+#endif
+#ifdef HAVE_BKGDSET
+	{ "HAVE_BKGDSET", 1 },
+#else
+	{ "HAVE_BKGDSET", 0 },
+#endif
+#ifdef HAVE_COLOR
+	{ "HAVE_COLOR", 1 },
+#else
+	{ "HAVE_COLOR", 0 },
+#endif
+#ifdef HAVE_CURS_SET
+	{ "HAVE_CURS_SET", 1 },
+#else
+	{ "HAVE_CURS_SET", 0 },
+#endif
+#ifdef HAVE_GETADDRINFO
+	{ "HAVE_GETADDRINFO", 1 },
+#else
+	{ "HAVE_GETADDRINFO", 0 },
+#endif
+#ifdef HAVE_GETSID
+	{ "HAVE_GETSID", 1 },
+#else
+	{ "HAVE_GETSID", 0 },
+#endif
+#ifdef HAVE_ICONV
+	{ "HAVE_ICONV", 1 },
+#else
+	{ "HAVE_ICONV", 0 },
+#endif
+#ifdef HAVE_LANGINFO_CODESET
+	{ "HAVE_LANGINFO_CODESET", 1 },
+#else
+	{ "HAVE_LANGINFO_CODESET", 0 },
+#endif
+#ifdef HAVE_LANGINFO_YESEXPR
+	{ "HAVE_LANGINFO_YESEXPR", 1 },
+#else
+	{ "HAVE_LANGINFO_YESEXPR", 0 },
+#endif
+#ifdef HAVE_LIBIDN
+	{ "HAVE_LIBIDN", 1 },
+#else
+	{ "HAVE_LIBIDN", 0 },
+#endif
+#ifdef HAVE_META
+	{ "HAVE_META", 1 },
+#else
+	{ "HAVE_META", 0 },
+#endif
+#ifdef HAVE_REGCOMP
+	{ "HAVE_REGCOMP", 1 },
+#else
+	{ "HAVE_REGCOMP", 0 },
+#endif
+#ifdef HAVE_RESIZETERM
+	{ "HAVE_RESIZETERM", 1 },
+#else
+	{ "HAVE_RESIZETERM", 0 },
+#endif
+#ifdef HAVE_START_COLOR
+	{ "HAVE_START_COLOR", 1 },
+#else
+	{ "HAVE_START_COLOR", 0 },
+#endif
+#ifdef HAVE_TYPEAHEAD
+	{ "HAVE_TYPEAHEAD", 1 },
+#else
+	{ "HAVE_TYPEAHEAD", 0 },
+#endif
+#ifdef HAVE_WC_FUNCS
+	{ "HAVE_WC_FUNCS", 1 },
+#else
+	{ "HAVE_WC_FUNCS", 0 },
+#endif
+#ifdef ICONV_NONTRANS
+	{ "ICONV_NONTRANS", 1 },
+#else
+	{ "ICONV_NONTRANS", 0 },
+#endif
+#ifdef USE_DOTLOCK
+	{ "USE_DOTLOCK", 1 },
+#else
+	{ "USE_DOTLOCK", 0 },
+#endif
+#ifdef USE_FCNTL
+	{ "USE_FCNTL", 1 },
+#else
+	{ "USE_FCNTL", 0 },
+#endif
+#ifdef USE_FLOCK
+	{ "USE_FLOCK", 1 },
+#else
+	{ "USE_FLOCK", 0 },
+#endif
+#ifdef USE_GNU_REGEX
+	{ "USE_GNU_REGEX", 1 },
+#else
+	{ "USE_GNU_REGEX", 0 },
+#endif
+#ifdef USE_GSS
+	{ "USE_GSS", 1 },
+#else
+	{ "USE_GSS", 0 },
+#endif
+#ifdef USE_HCACHE
+	{ "USE_HCACHE", 1 },
+#else
+	{ "USE_HCACHE", 0 },
+#endif
+#ifdef USE_IMAP
+	{ "USE_IMAP", 1 },
+#else
+	{ "USE_IMAP", 0 },
+#endif
+#ifdef USE_POP
+	{ "USE_POP", 1 },
+#else
+	{ "USE_POP", 0 },
+#endif
+#ifdef USE_SASL
+	{ "USE_SASL", 1 },
+#else
+	{ "USE_SASL", 0 },
+#endif
+#ifdef USE_SETGID
+	{ "USE_SETGID", 1 },
+#else
+	{ "USE_SETGID", 0 },
+#endif
+#ifdef USE_SMTP
+	{ "USE_SMTP", 1 },
+#else
+	{ "USE_SMTP", 0 },
+#endif
+#ifdef USE_SSL_GNUTLS
+	{ "USE_SSL_GNUTLS", 1 },
+#else
+	{ "USE_SSL_GNUTLS", 0 },
+#endif
+#ifdef USE_SSL_OPENSSL
+	{ "USE_SSL_OPENSSL", 1 },
+#else
+	{ "USE_SSL_OPENSSL", 0 },
+#endif
+	{ NULL, 0 }
+};
+
+/**
+ * print_compile_options - Print a list of enabled/disabled features
+ *
+ * The configure script lets uses enable/disable features.
+ * This shows the Mutt user which features are/aren't available.
+ *
+ * The output is of the form: "+ENABLED_FEATURE -DISABLED_FEATURE" and is
+ * wrapped to SCREEN_WIDTH characters.
+ */
+void
+print_compile_options (void)
+{
+	int i;
+	char c;
+	int len;
+	int used = 0;
+
+	for (i = 0; comp_opts[i].name; i++) {
+		len = strlen (comp_opts[i].name) + 2;	/* +/- and a space */
+		if ((used + len) > SCREEN_WIDTH) {
+			used = 0;
+			puts ("");
+		}
+		used += len;
+		c = comp_opts[i].enabled ? '+' : '-';
+		printf ("%c%s ", c, comp_opts[i].name);
+	}
+	puts ("");
+}
+
+/**
+ * feature_enabled - Test is a compile-time feature is enabled
+ * @name:  Compile-time symbol of the feature
+ *
+ * Many of the larger features of mutt can be disabled at compile time.
+ * They define a symbol and use #ifdef's around their code.
+ * The symbols are mirrored in "struct compile_options comp_opts[]" in this
+ * file.
+ *
+ * This function checks if one of these symbols is present in the code.
+ *
+ * These symbols are also seen in the output of "mutt -v".
+ *
+ * Returns:
+ *	1: Feature enables
+ *	0: Feature not enabled, or not compiled in
+ */
+int
+feature_enabled (const char *name)
+{
+	if (!name)
+		return 0;
+
+	int i;
+	for (i = 0; comp_opts[i].name; i++) {
+		if (mutt_strcmp (name, comp_opts[i].name) == 0) {
+			return 1;
+		}
+	}
+	return 0;
+}
+
diff -r 2731ee526834 -r 8c85bbb5d7cc version.h
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/version.h	Tue Jan 26 23:00:09 2016 +0000
@@ -0,0 +1,25 @@
+/**
+ * Copyright (C) 2016 Richard Russon
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
+ */
+
+#ifndef _VERSION_H_
+#define _VERSION_H_
+
+void print_compile_options (void);
+int feature_enabled (const char *name);
+
+#endif /* _VERSION_H_ */
