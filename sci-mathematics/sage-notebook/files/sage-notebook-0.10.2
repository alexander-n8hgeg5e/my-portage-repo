#!/sbin/runscript

user_home=$(eval cd ~${user:=sage} && pwd)

# set default values
: ${accounts:=False}
: ${directory:="${user_home}"/.sage/sage_notebook.sagenb}
: ${interface-localhost}
: ${pidtimeout:=20}
: ${port:=8000}
: ${automatic_login:=False}
: ${secure:=False}
: ${timeout:=0}
: ${ulimit:=None}
: ${user:=sage}

: ${stdout:="${user_home}"/sagenb.log}
: ${stderr:="${user_home}"/sagenb.err}

# resolve any tildes 'directory' might contain
directory=$(eval echo "${directory}")

command_args=( 
	-notebook
	accounts=${accounts}
	directory="${directory}"
	interface=${interface}
	port=${port}
	automatic_login=${automatic_login}
	secure=${secure}
	timeout=${timeout}
	ulimit=${ulimit}
)

# pidfile is hardcoded into Sage's source files
pidfile="${directory}"/sagenb.pid

depend() {
	need net
}

start() {
	# TODO: Add additional code to detect different startup failures based on
	# standard output
	if [ -z "${directory}" ] || [ ! -f "${directory}"/users.pickle ] ; then
		eend 1 "Did not find user database - configure Sage's Notebook first:"

		echo
		einfo "- Configure the ${RC_SVCNAME}'s configuration file in: "
		einfo ""
		einfo "    /etc/conf.d/${RC_SVCNAME}"
		einfo ""
		einfo "- Switch to the superuser and run the Notebook with the options"
		einfo "  you specified in the configuration file. Based on your current"
		einfo "  settings this would be:"
		einfo ""
		einfo "     su ${user} -c \"sage ${command_args[@]}\""
		einfo ""
		einfo "  Follow Sage's instructions and exit it after twistd is started"
		einfo "  by pressing Ctrl+C."
		einfo "- A multiuser server will require additional setup. Visit the"
		einfo "  following URL for details:"
		einfo ""
		einfo "    http://sagemath.org/doc/reference/sagenb/notebook/notebook_object.html"
		echo

		return 1
	fi

	ebegin "Starting Sage's Notebook server"
	start-stop-daemon \
		--start \
		--background \
		--stdout "${stdout}" \
		--stderr "${stderr}" \
		--pidfile "${pidfile}" \
		--user ${user} \
		--exec /usr/bin/sage \
		-- "${command_args[@]}"
	eend $? "Failed to start Sage's Notebook server"

	if ! ewaitfile ${pidtimeout} "${pidfile}" ; then
		eerror "Server did not properly start; check errorfile for more information"
	fi
}

stop() {
	ebegin "Stopping Sage's Notebook server"
	start-stop-daemon --stop --pidfile "${pidfile}" --user ${user}
	eend $? "Failed to stop Sage's Notebook server"
}
